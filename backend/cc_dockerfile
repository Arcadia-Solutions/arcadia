FROM rust:1.89 AS base
RUN cargo install --locked cargo-chef

FROM base AS planner
WORKDIR /app

COPY . .
COPY api/vendored ./api/vendored/
COPY .env.docker .env

RUN cargo chef prepare --recipe-path recipe.json

FROM base AS builder

WORKDIR /app

COPY --from=planner /app/recipe.json recipe.json
COPY --from=planner /app/api/vendored /app/api/vendored/

RUN if [ "${PRODUCTION_BUILD}" = "true" ]; then \
    cargo chef cook --release --workspace arcadia-api --recipe-path recipe.json;  \
    else \
    cargo chef cook --workspace --recipe-path recipe.json; \
    fi

COPY . .

RUN if [ "${PRODUCTION_BUILD}" = "true" ]; then \
    SQLX_OFFLINE=true cargo build --release && mv /app/target/release/arcadia-api /usr/local/bin; \
    else \
    SQLX_OFFLINE=true cargo build && mv /app/target/debug/arcadia-api /usr/local/bin; \
    fi

FROM debian:bookworm-slim AS runtime

WORKDIR /app

RUN apt-get update && apt-get install -y libssl-dev openssl curl pkg-config ca-certificates

COPY --from=builder /usr/local/bin/arcadia-api /usr/local/bin 

ENTRYPOINT ["/usr/local/bin/arcadia-api"]
