{
  "db_name": "PostgreSQL",
  "query": "WITH torrent_data AS (\n                    SELECT\n                        t.edition_group_id,\n                        jsonb_agg(\n                            -- Handle anonymity: show creator info only if requesting user is the uploader or if not anonymous\n                            CASE\n                                WHEN t.uploaded_as_anonymous AND t.created_by_id != $1 THEN\n                                    (to_jsonb(t) - 'created_by_id' - 'display_created_by_id' - 'display_created_by') ||\n                                    jsonb_build_object('created_by_id', NULL, 'created_by', NULL, 'uploaded_as_anonymous', true)\n                                ELSE\n                                    (to_jsonb(t) - 'display_created_by_id' - 'display_created_by') ||\n                                    jsonb_build_object('created_by', to_jsonb(u))\n                            END\n                            ORDER BY t.size DESC\n                        ) AS torrents\n                    FROM torrents_and_reports t\n                    LEFT JOIN users u ON u.id = t.created_by_id\n                    GROUP BY t.edition_group_id\n                ),\n                torrent_request_with_bounty AS (\n                    SELECT\n                        tr.*,\n                        u.username,\n                        u.warned,\n                        u.banned,\n                        COALESCE(SUM(trv.bounty_upload), 0) AS total_upload_bounty,\n                        COALESCE(SUM(trv.bounty_bonus_points), 0) AS total_bonus_bounty,\n                        COUNT(DISTINCT trv.created_by_id) AS user_votes_amount\n                    FROM torrent_requests tr\n                    LEFT JOIN torrent_request_votes trv ON tr.id = trv.torrent_request_id\n                    LEFT JOIN users u ON u.id = tr.created_by_id -- Join with users table\n                    GROUP BY\n                        tr.id,\n                        tr.title_group_id,\n                        tr.created_at,\n                        tr.updated_at,\n                        tr.created_by_id,\n                        tr.filled_by_user_id,\n                        tr.filled_by_torrent_id,\n                        tr.filled_at,\n                        tr.edition_name,\n                        tr.release_group,\n                        tr.description,\n                        tr.languages,\n                        tr.container,\n                        tr.audio_codec,\n                        tr.audio_channels,\n                        tr.audio_bitrate_sampling,\n                        tr.video_codec,\n                        tr.features,\n                        tr.subtitle_languages,\n                        tr.video_resolution,\n                        u.username,\n                        u.warned,\n                        u.banned\n                ),\n                torrent_request_data AS (\n                    SELECT\n                        trb.title_group_id,\n                        jsonb_agg(\n                            jsonb_build_object(\n                                'torrent_request', to_jsonb(trb),\n                                'created_by', jsonb_build_object(\n                                    'id', trb.created_by_id,\n                                    'username', trb.username,\n                                    'warned', trb.warned,\n                                    'banned', trb.banned\n                                ),\n                                'bounty', jsonb_build_object(\n                                    'upload', trb.total_upload_bounty,\n                                    'bonus_points', trb.total_bonus_bounty\n                                ),\n                                'user_votes_amount', trb.user_votes_amount\n                            )\n                            ORDER BY trb.id\n                        ) AS torrent_requests\n                    FROM torrent_request_with_bounty trb\n                    GROUP BY trb.title_group_id\n                ),\n                edition_data AS (\n                    SELECT\n                        eg.title_group_id,\n                        jsonb_agg(\n                            to_jsonb(eg) || jsonb_build_object('torrents', COALESCE(td.torrents, '[]'::jsonb))\n                            ORDER BY eg.release_date\n                        ) AS edition_groups\n                    FROM edition_groups eg\n                    LEFT JOIN torrent_data td ON td.edition_group_id = eg.id\n                    GROUP BY eg.title_group_id\n                ),\n                artist_data AS (\n                    SELECT\n                        aa.title_group_id,\n                        jsonb_agg(\n                            to_jsonb(aa) || jsonb_build_object('artist', to_jsonb(a))\n                        ) AS affiliated_artists\n                    FROM affiliated_artists aa\n                    JOIN artists a ON a.id = aa.artist_id\n                    GROUP BY aa.title_group_id\n                ),\n                entity_data AS (\n                    SELECT\n                        ae.title_group_id,\n                        jsonb_agg(\n                            to_jsonb(ae) || jsonb_build_object('entity', to_jsonb(e))\n                        ) AS affiliated_entities\n                    FROM affiliated_entities ae\n                    JOIN entities e ON e.id = ae.entity_id\n                    GROUP BY ae.title_group_id\n                ),\n                comment_data AS (\n                    SELECT\n                        c.title_group_id,\n                        jsonb_agg(\n                            to_jsonb(c) || jsonb_build_object('created_by', jsonb_build_object('id', u.id, 'username', u.username, 'avatar', u.avatar, 'warned', u.warned, 'banned', u.banned))\n                            ORDER BY c.created_at\n                        ) AS title_group_comments\n                    FROM title_group_comments c\n                    LEFT JOIN users u ON u.id = c.created_by_id\n                    GROUP BY c.title_group_id\n                ),\n                series_data AS (\n                    SELECT\n                        tg.id AS title_group_id,\n                        jsonb_build_object('name', s.name, 'id', s.id) AS series\n                    FROM title_groups tg\n                    LEFT JOIN series s ON s.id = tg.series_id\n                ),\n                subscription_data AS (\n                    SELECT\n                        id,\n                        EXISTS(\n                            SELECT 1\n                            FROM subscriptions tgs\n                            WHERE tgs.title_group_id = tg.id\n                            AND tgs.subscriber_id = $1\n                        ) AS is_subscribed\n                    FROM title_groups tg\n                ),\n                same_master_group AS (\n                    SELECT\n                        jsonb_agg(jsonb_build_object('id', tg_inner.id, 'name', tg_inner.name, 'content_type', tg_inner.content_type, 'platform', tg_inner.platform)) AS in_same_master_group\n                    FROM title_groups tg_main\n                    JOIN title_groups tg_inner ON tg_inner.master_group_id = tg_main.master_group_id AND tg_inner.id != tg_main.id\n                    WHERE tg_main.id = $2 AND tg_main.master_group_id IS NOT NULL\n                    GROUP BY tg_main.master_group_id\n                ),\n                collage_metrics AS (\n                    SELECT\n                        collage_id,\n                        COUNT(id) AS entries_amount,\n                        MAX(created_at) AS last_entry_at\n                    FROM collage_entry\n                    GROUP BY collage_id\n                ),\n                collage_data AS (\n                    SELECT\n                        ce.title_group_id,\n                        jsonb_agg(\n                            jsonb_build_object(\n                                'id', c.id,\n                                'created_at', c.created_at,\n                                'created_by_id', c.created_by_id,\n                                'created_by', jsonb_build_object(\n                                    'id', u.id,\n                                    'username', u.username,\n                                    'warned', u.warned,\n                                    'banned', u.banned\n                                ),\n                                'name', c.name,\n                                'cover', c.cover,\n                                'description', c.description,\n                                'tags', c.tags,\n                                'category', c.category,\n                                'collage_type', c.collage_type,\n                                'entries_amount', cm.entries_amount,\n                                'last_entry_at', cm.last_entry_at\n                            )\n                            ORDER BY c.created_at\n                        ) AS collages\n                    FROM collage_entry ce\n                    JOIN collage c ON c.id = ce.collage_id\n                    JOIN users u ON u.id = c.created_by_id\n                    LEFT JOIN collage_metrics cm ON cm.collage_id = c.id\n                    WHERE ce.title_group_id = $2\n                    GROUP BY ce.title_group_id\n                )\n                SELECT\n                    jsonb_build_object(\n                        'title_group', to_jsonb(tg),\n                        'series', COALESCE(sd.series, '{}'::jsonb),\n                        'edition_groups', COALESCE(ed.edition_groups, '[]'::jsonb),\n                        'affiliated_artists', COALESCE(ad.affiliated_artists, '[]'::jsonb),\n                        'affiliated_entities', COALESCE(aed.affiliated_entities, '[]'::jsonb),\n                        'title_group_comments', COALESCE(cd.title_group_comments, '[]'::jsonb),\n                        'torrent_requests', COALESCE(trd.torrent_requests, '[]'::jsonb),\n                        'is_subscribed', COALESCE(sud.is_subscribed, false),\n                        'in_same_master_group', COALESCE(smg.in_same_master_group, '[]'::jsonb),\n                        'collages', COALESCE(cod.collages, '[]'::jsonb)\n                    ) AS title_group_data\n                FROM title_groups tg\n                LEFT JOIN edition_data ed ON ed.title_group_id = tg.id\n                LEFT JOIN artist_data ad ON ad.title_group_id = tg.id\n                LEFT JOIN entity_data aed ON aed.title_group_id = tg.id\n                LEFT JOIN comment_data cd ON cd.title_group_id = tg.id\n                LEFT JOIN series_data sd ON sd.title_group_id = tg.id\n                LEFT JOIN torrent_request_data trd ON trd.title_group_id = tg.id\n                LEFT JOIN subscription_data sud ON sud.id = tg.id\n                LEFT JOIN same_master_group smg ON TRUE -- Only one row will be returned from same_master_group when master_group_id is set\n                LEFT JOIN collage_data cod ON cod.title_group_id = tg.id\n                WHERE tg.id = $2;",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "title_group_data",
        "type_info": "Jsonb"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Int8"
      ]
    },
    "nullable": [
      null
    ]
  },
  "hash": "0315da131b68d6bfdd9fc440b18112d1512edb00dc2a1a11f6fe8438ca518727"
}
